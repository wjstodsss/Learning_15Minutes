24days 20201125
//1차 비밀지도
//정수배열 arr1의 요소와 arr2의 요소를 이진수를 변환후 비교하여 모두 0일 때를 제외하고 1로 반환
//자리수 지킬것!!(엄청고민함) 배열의 크기 n(한변의 길이)
//예 한변의 길이가 6이고 이진수로 변환된 요소의 값이 각각 arr1 = 11, arr2 = 100001이라고 할 때
//arr1 = 11 = 000011으로 표시되어야 하고 이 두값을 비교하여 or(arr1, arr2) = 100011로 반환후
// 1="#", 0=" " 으로 변환 한다. 즉, #   ##으로 표시
//이클립스 버전
public class P_Lv1_SecretMap {

	public static void main(String[] args) {
		int n = 6;
		String[] answer = new String[n];
		int[] arr1 = {46,33,33,22,31,50};
		int[] arr2 = {27,56,19,14,14,10};
		int i = 0;
	
		/*for (i=0;i<n;i++) {
			System.out.println(arr1[i]+""+arr1[i]+""+arr1[i]+""+arr1[i]+""+arr1[i]);
		}*/
		for (i = 0; i < n; i++) {
			answer[i] = Integer.toBinaryString(arr1[i] | arr2[i]);
			while(answer[i].length()<n) {
				answer[i]="0"+answer[i];
			}
			
		}
		for (i=0;i<n;i++) {
			System.out.println(answer[i]);
		}
		for (i = 0; i < n; i++) {
		   // result[i] = String.format("%" + n + "s", result[i]);
			answer[i] = answer[i].replaceAll("1", "#");
			answer[i] = answer[i].replaceAll("0", " ");
		}
		for (i=0;i<n;i++) {
			System.out.println(answer[i]);
		}
		
	}	
}
//프로그래머스 버전
class Solution {
    public String[] solution(int n, int[] arr1, int[] arr2) {
        String[] answer = new String[n];
        for(int i=0; i<n; i++ ) {
            answer[i] = Integer.toBinaryString(arr1[i]|arr2[i]);
            while(answer[i].length()<n) {
				answer[i]="0"+answer[i];
			}
        }
        for (int i=0; i < n; i++) {
		   
		    answer[i] = answer[i].replaceAll("1", "#");
		    answer[i] = answer[i].replaceAll("0", " ");
		}
        return answer;
    }
}
